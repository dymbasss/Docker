services:

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configuration/:/etc/prometheus/
      - prometheus_data:/prometheus/:rw
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    network_mode: bridge

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    network_mode: bridge

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres_exporter:twwuDK3FRTnxNDG6zStR@192.168.0.110:5432/gate_io?sslmode=disable"
    links:
      # - postgres
      - prometheus

  # Отдельный модуль визуализации
  grafana:
    image: grafana/grafana
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./grafana/provisioning/:/etc/grafana/provisioning:rw
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    network_mode: bridge

volumes:
  prometheus_data:
    external: True
  grafana_data:
    external: True
  grafana_provisioning:
    external: True

networks:
  bridge:
    external: True